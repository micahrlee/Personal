package me.imguralbumdownloader.com;

import java.awt.BorderLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.LayoutStyle.ComponentPlacement;

import java.awt.Toolkit;

/**
 * 
 * @author Micah Lee
 * DoneWindow displays when a download has completed.
 *
 */
public class DoneWindow extends JDialog {
	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private JButton yesButton;
	private JButton noButton;
	
	/**
	 * Constructor
	 * @param fileName - String - the name of the completed album which has been downloaded
	 * @param path - String - the name of the path where the images were downloaded. This will be used to open up the directory.
	 */
	public DoneWindow(final String fileName, final String path) {
		//Set the window attributes
		setIconImage(Toolkit.getDefaultToolkit().getImage(DoneWindow.class.getResource("/me/imguralbumdownloader/com/icon-imgur.png")));
		setResizable(false);
		setTitle("Done!");
		setBounds(100, 100, 383, 137);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.WEST);
		{
			yesButton = new JButton("Yes");
			noButton = new JButton("No");
		}
		
		//If Yes was clicked, open up the file explorer to the location of the album
		yesButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent arg0) {
				try {
					if(!OSUtilities.openDir(path)){
						JOptionPane.showMessageDialog(null, "Could not open directory", "Error", JOptionPane.ERROR_MESSAGE);
					}
				} catch (IOException e) {
					e.printStackTrace();
				}
				dispose();
			}
		});
		
		//If No was clicked, then simply dispose of the window
		noButton.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent arg0) {
				dispose();
			}
		});
		
		//Label to display which file has completed download
		JLabel lblDownloadOfHas = new JLabel("<html>Download of " + fileName + " has finished!<br/>Open directory?</html>");
		lblDownloadOfHas.setFont(new Font("Tahoma", Font.PLAIN, 13));
		
		//Set up the GroupLayout (Auto generated by Eclipse Window Builder
		setLocationRelativeTo(null);
		GroupLayout gl_contentPanel = new GroupLayout(contentPanel);
		gl_contentPanel.setHorizontalGroup(
			gl_contentPanel.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_contentPanel.createSequentialGroup()
					.addGroup(gl_contentPanel.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPanel.createSequentialGroup()
							.addContainerGap()
							.addComponent(lblDownloadOfHas, GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
						.addGroup(gl_contentPanel.createSequentialGroup()
							.addGap(94)
							.addComponent(yesButton, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addComponent(noButton, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)))
					.addContainerGap())
		);
		gl_contentPanel.setVerticalGroup(
			gl_contentPanel.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_contentPanel.createSequentialGroup()
					.addComponent(lblDownloadOfHas, GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(gl_contentPanel.createParallelGroup(Alignment.BASELINE)
						.addComponent(yesButton)
						.addComponent(noButton)))
		);
		contentPanel.setLayout(gl_contentPanel);
		pack();
	}
}
